Paradgmas de programação é forma que usamos para classificar as linguagens de programação pela sua forma de funcionar

Programação imperativa = programação procedual, poo.

programação declarativa = programação funcional, programação reativação;

Programação procedural - passo a passo, em uma ordem


O bom de usar poo é que você vai fazer reuso de código, encapsulamento, polimorfismo, herança, organização etc

No munod real tudo é objeto


classe é descrição de um conjunto de objetos do mesmo tipo 

As classes definem quais são as caracteristicas e os comportamentos que esses objetos em comum vão ter quando eles existirem 

As caracteristicas são as propriedades/atributos

os comportamentos são os metodos/procedimentos/funções

usamos o nome tipo para falar das classes também

Apartir de uma classe/tipo instanciamos varios objetos

e eles podem ter valores diferentes

Poo - conjunto de objetos que podem se relacionar um entre os outros

Você não declara o objeto pessoa1, você declarou a variável. O objeto só está na memória
a variável pessoa1 faz referência ao objeto do tipo Pessoa que está na memória

Variáveis referenciam objetos, elas não são os objetos em si

na UML uma linha trastejada com uma seta significa dependência

O this faz referência ao próprio objeto

quando eu coloco o static ela diz que a variável não pertence a uma instância, mas pertence a class, no caso eu não preciso instanciar;

ela é única, ela é compartilhada, no caso ela não muda de acordo com outros instanciados, ele é tipo como uma variável global, se eu criar duas variáveis instanciando elas, e eu falar que um certo valor statico é 10, e depois falar que outro certo valor estatico é 15, o ultimo valor que vai ser atribuido, e é para os dois.

o correto é acessar essa variável estatica pela propria class e não pela suas instancias	
se você quiser acessar a um atributo estatico em um método, você não deve colocar a palavra this, mas deve colocar o proprio nome do objeto

Os métodos também podem ser staticos

evite utilizar metodos staticos

em métodos, não reaproveite as variáveis que você recebeu por parâmetro, crie uma nova variável dentro do método
